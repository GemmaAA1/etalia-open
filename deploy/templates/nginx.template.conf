upstream etalia_prod {
    server unix:/tmp/{{ SITENAME }}.socket fail_timeout=0;
}

server {
    server_name www.{{ SITENAME }} {{ SITENAME }};
    return 301 https://{{ SITENAME }}$request_uri;
}

server {
    listen 443 ssl;
    server_name www.{{ SITENAME }};
    return 301 https://{{ SITENAME }}$request_uri;
}

server {
    listen          443 default_server ssl;
    server_name     {{ SITENAME }};

    access_log      /var/log/nginx/{{ SITENAME }}_access.log combined;
    error_log       /var/log/nginx/{{ SITENAME }}_error.log error;

    ssl_certificate         /etc/nginx/ssl/{{ SITENAME }}-unified.crt;
    ssl_certificate_key     /etc/nginx/ssl/{{ SITENAME }}.key;

    ssl_prefer_server_ciphers On;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS;

    client_max_body_size 10M;

    gzip on;
    gzip_min_length 1000;
    gzip_proxied    expired no-cache no-store private auth;
    gzip_types
        text/css
        text/javascript
        text/xml
        text/plain
        application/javascript
        application/x-javascript
        application/json;

    location /static {
       expires 30d;
       add_header Pragma public;
       add_header Cache-Control "public";
       add_header Access-Control-Allow-Origin *;
       alias /home/ubuntu/{{ STACK }}/static;
    }

    location / {

        if (-f /home/ubuntu/{{ STACK }}/source/etalia/templates/maintenance_on.html) {
            return 503;
        }

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_redirect off;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://unix:/tmp/{{ SITENAME }}.socket;
    }

    # Error pages.
    error_page 500 501 502 503 504 /maintenance_off.html;
    location = /maintenance_off.html {
        internal;
        root /home/ubuntu/{{ STACK }}/source/etalia/templates/;
    }

    # TODO Caching assets
}
