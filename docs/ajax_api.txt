url: /feed/stream/
XHR GET:
    {
        'journals': [pk1, pk2, ...],
        'authors': [pk1, pk2, ...],
        'cluster': (int) or null,
        'pin': (bool),
        'search_query': (str),
    }
return:
    HTML block


url: /feed/stream/filter
XHR GET:
    {
        'filters': [
            {
                'id': (string),         # Values: journal, author
                'pk': [(int), ...]
            },
            ...
        ],
        'time_span': (int),             # Values: 7, 30, 60
        'cluster': (int) or null,       # Values: null, 0, 1, 2, 3
        'pin': (bool),
        'search_query': (str),
    }
return: XML
    <?xml encoding="UTF-8">
    <response>
       <data>
            {
                'filters': [
                    {
                        'id': (string), # Values: journal, author
                        'entry': [
                            {
                                'pk': (int),
                                'name': (string),
                                'count': (int|null),
                                'is_checked': (bool)
                            },
                            ...
                        ]
                    },
                    ...
                ],
                'time_span': (int),
                'cluster': (int) or null,
                'pin': (bool),
                'search_query': (str),
            }
       </data>
       <thumb-list>
        <![CDATA[
            HTML block
        ]]>
       </thumb-list>
    </response>


url: /feed/trend/filter
same as /feed/stream/filter for trends

url: /user/paper/pin
POST:
    {
        'pk': paper.pk,
        'source':  window.location.pathname,
    }
return:
    {
        'is_liked': (bool),
        'is_ticked': (bool), 
        'likes_counter': (int),
    }

url: /user/paper/ban
POST:
    {
        'pk': paper.pk,
        'source':  window.location.pathname,
    }
return:
    {
        'is_liked': (bool),
        'is_ticked': (bool), 
        'likes_counter': (int),
    }

url: /user/paper/add
POST:
    {
        'pk': paper.pk
    }
return:
    {
        'success': True,
        'trash_counter':  (int),
        'library_counter': (int),
        'likes_counter': (int),
        'message': ''
    }
    OR
    {
        'success': False,
        'message': (str),
    }

url: /usr/paper/trash
POST:
    {
        'pk': paper.pk
    }
return:
    {
        'success': True,
        'trash_counter':  (int),
        'library_counter': (int),
        'likes_counter': (int),
        'message': ''
    }
    OR
    {
        'success': False,
        'message': (str),
    }

url: /user/paper/restore
POST:
    {
        'success': True,
        'trash_counter':  (int),
        'library_counter': (int),
        'likes_counter': (int),
        'message': ''
    }
    OR
    {
        'success': False,
        'message': (str),
    }