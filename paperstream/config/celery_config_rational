Rational for celery configuration

Context:
* Regular task (consumers, library sync) can be run on the default celery queue. Overhead is minimal.
* Tasks related to paper embedding and kd-tree insert and query for nn search requires that the
  corresponding objects are cached to limit overhead. This implies that the task
  is routed to the same queue and same process (i.e. same prefork/thread) and to
  define BaseTask class (see: http://docs.celeryproject.org/en/latest/userguide/tasks.html#instantiation)
  NB: Is there another way? Using eventlet ?


Draft:
Task are:
- consumers of journal/publisher
- embedding of documents and tree managing
- feeds updates
- user syncying with providers

Most intensive is embedding. It seems like a good idea to make it lives on a distinct layer.
Plus NLP model should remain in cache using a class-based task:

# Each model has it specific queue (e.g. dbow)
>> celery -A config worker -Q dbow --concurrency=2 --loglevel=info

# A queue for consumers
>> celery -A config worker -Q consumers --concurrency=2 --loglevel=info

# All other goes to default
>> celery -A config worker -Q default --loglevel=info

